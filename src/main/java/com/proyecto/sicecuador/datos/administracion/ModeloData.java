package com.proyecto.sicecuador.datos.administracion;

import com.proyecto.sicecuador.modelos.administracion.Modelo;
import com.proyecto.sicecuador.repositorios.administracion.IModeloRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
@Component
@Order(1)
public class ModeloData implements ApplicationRunner {
    @Autowired
    private IModeloRepository rep;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        Optional<Modelo> ant=rep.findById((long) 1);
        if (!ant.isPresent()){
            List<Modelo> modelos=new ArrayList<>();
            Modelo modelo=new Modelo("AMORTIZACION", "amortizacion", "amortizacion");
            modelos.add(modelo);
            modelo=new Modelo("AUXILIAR","auxiliar", "auxiliar");
            modelos.add(modelo);
            modelo=new Modelo("BANCO","banco", "banco");
            modelos.add(modelo);
            modelo=new Modelo("BODEGA","bodega", "bodega");
            modelos.add(modelo);
            modelo=new Modelo("BODEGA PRODUCTO ","bodega_producto", "bodegaproducto");
            modelos.add(modelo);
            modelo=new Modelo("CARACTERISTICA","caracteristica", "caracteristica");
            modelos.add(modelo);
            modelo=new Modelo("CATEGORIA DEL CLIENTE","categoria_cliente", "categoriacliente");
            modelos.add(modelo);
            modelo=new Modelo("CELULAR", "celular", "celular");
            modelos.add(modelo);
            modelo=new Modelo("CELULAR DEL AUXILIAR","celular_auxiliar", "celularauxiliar");
            modelos.add(modelo);
            modelo=new Modelo("CHEQUE","cheque", "cheque");
            modelos.add(modelo);
            modelo=new Modelo("CLIENTE", "cliente", "cliente");
            modelos.add(modelo);
            modelo=new Modelo("COMPENSACION","compensacion", "compensacion");
            modelos.add(modelo);
            modelo=new Modelo("CORREO","correo", "correo");
            modelos.add(modelo);
            modelo=new Modelo("CORREO DEL AUXILIAR","correo_auxiliar", "correoauxiliar");
            modelos.add(modelo);
            modelo=new Modelo("CREDITO","credito", "credito");
            modelos.add(modelo);
            modelo=new Modelo("CREDITO DE AMORTIZACION","credito_amortizacion", "creditoamortizacion");
            modelos.add(modelo);
            modelo=new Modelo("CUENTA PROPIA","cuenta_propia", "cuenta_propia");
            modelos.add(modelo);
            modelo=new Modelo("DEPOSITO","deposito", "deposito");
            modelos.add(modelo);
            modelo=new Modelo("DIRECCION","direccion", "direccion");
            modelos.add(modelo);
            modelo=new Modelo("EGRESO","egreso", "egreso");
            modelos.add(modelo);
            modelo=new Modelo("EMPRESA","empresa", "empresa");
            modelos.add(modelo);
            modelo=new Modelo("ESTABLECIMIENTO","establecimiento", "establecimiento");
            modelos.add(modelo);
            modelo=new Modelo("ESTADO CIVIL","estado_civil", "estadocivil");
            modelos.add(modelo);
            modelo=new Modelo("FACTURA","factura", "factura");
            modelos.add(modelo);
            modelo=new Modelo("FACTURA DETALLE","factura_detalle", "facturadetalle");
            modelos.add(modelo);
            modelo=new Modelo("FINACIAMIENTO","financiamiento", "financiamiento");
            modelos.add(modelo);
            modelo=new Modelo("FORMA DE PAGO","forma_pago", "formapago");
            modelos.add(modelo);
            modelo=new Modelo("FRANQUICIA DE TARJETA", "franquicia_tarjeta", "franquiciatarjeta");
            modelos.add(modelo);
            modelo=new Modelo("GENERO","genero", "genero");
            modelos.add(modelo);
            modelo=new Modelo("GRUPO DE CLIENTE","grupo_cliente", "grupocliente");
            modelos.add(modelo);
            modelo=new Modelo("GRUPO DE PRODUCTO","grupo_producto", "grupoproducto");
            modelos.add(modelo);
            modelo=new Modelo("GUIA DE REMISION","guia_remision", "guiaremision");
            modelos.add(modelo);
            modelo=new Modelo("IMPUESTO","impuesto", "impuesto");
            modelos.add(modelo);
            modelo=new Modelo("KARDEX","kardex", "kardex");
            modelos.add(modelo);
            modelo=new Modelo("MEDIDA","medida", "medida");
            modelos.add(modelo);
            modelo=new Modelo("OPERADOR DE TARJETA","operador_tarjeta", "operadortarjeta");
            modelos.add(modelo);
            modelo=new Modelo("ORIGEN DE INGRESO","origen_ingreso", "origeningreso");
            modelos.add(modelo);
            modelo=new Modelo("PARAMETRO","parametro", "parametro");
            modelos.add(modelo);
            modelo=new Modelo("PEDIDO","pedido", "pedido");
            modelos.add(modelo);
            modelo=new Modelo("PERFIL","perfil", "perfil");
            modelos.add(modelo);
            modelo=new Modelo("PERMISO","permiso", "permiso");
            modelos.add(modelo);
            modelo=new Modelo("PLAZO DE CREDITO","plazo_credito", "plazocredito");
            modelos.add(modelo);
            modelo=new Modelo("PRECIO","precio", "precio");
            modelos.add(modelo);
            modelo=new Modelo("PRODUCTO","producto", "producto");
            modelos.add(modelo);
            modelo=new Modelo("PROFORMA","proforma", "proforma");
            modelos.add(modelo);
            modelo=new Modelo("PROVEEDOR","proveedor", "proveedor");
            modelos.add(modelo);
            modelo=new Modelo("PUNTO DE VENTA","punto_venta", "puntoventa");
            modelos.add(modelo);
            modelo=new Modelo("RANGO DE CREDITO","rango_crediticio", "rangocrediticio");
            modelos.add(modelo);
            modelo=new Modelo("RECAUDACION","recaudacion", "recaudacion");
            modelos.add(modelo);
            modelo=new Modelo("RETENCION DE CLIENTE","retencion_cliente", "retencioncliente");
            modelos.add(modelo);
            modelo=new Modelo("RETENCION DE VENTA","retencion_venta", "retencionventa");
            modelos.add(modelo);
            modelo=new Modelo("RETENCION DE VENTA DETALLE","retencion_venta_detalle", "retencionventadetalle");
            modelos.add(modelo);
            modelo=new Modelo("SESION","sesion", "sesion");
            modelos.add(modelo);
            modelo=new Modelo("TARJETA DE CREDITO","tarjeta_credito", "tarjetacredito");
            modelos.add(modelo);
            modelo=new Modelo("TARJETA DEBITO","tarjeta_debito", "tarjetadebito");
            modelos.add(modelo);
            modelo=new Modelo("TELEFONO","telefono", "telefono");
            modelos.add(modelo);
            modelo=new Modelo("TELEFONO AUXILIAR","telefono_auxiliar", "telefonoauxiliar");
            modelos.add(modelo);
            modelo=new Modelo("TIPO DE COMPROBANTE","tipo_comprobante", "tipocomprobante");
            modelos.add(modelo);
            modelo=new Modelo("TIPO DE CONTRIBUYENTE","tipo_contribuyente", "tipocontribuyente");
            modelos.add(modelo);
            modelo=new Modelo("TIPO DE PAGO","tipo_pago", "tipopago");
            modelos.add(modelo);
            modelo=new Modelo("TIPO DE PRODUCTO","tipo_producto", "tipoproducto");
            modelos.add(modelo);
            modelo=new Modelo("TIPO DE RETENCION","tipo_retencion", "tiporetencion");
            modelos.add(modelo);
            modelo=new Modelo("TRANSFERENCIA","transferencia", "transferencia");
            modelos.add(modelo);
            modelo=new Modelo("TRANSPORTISTA","transportista", "transportista");
            modelos.add(modelo);
            modelo=new Modelo("UBICACION","ubicacion", "ubicacion");
            modelos.add(modelo);
            modelo=new Modelo("USUARIO","usuario", "usuario");
            modelos.add(modelo);
            modelo=new Modelo("VEHICULO DE TRANSPORTE","vehiculo_transporte", "vehiculotransporte");
            modelos.add(modelo);
            rep.saveAll(modelos);
        }
    }

}
